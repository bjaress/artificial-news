[x] fuzzy match headlines and episodes
    [x] Levenshtein library
    [x] normalized similarity > 0.6
    [x] first unknown
    [x] use in fresh_headline (reversing age)
    [x] optimize with cutoff
[x] reaping old episodes
    [x] separate endpoint with own schedule
    [x] delete everything over n days old
        - TODAY env variable for testing
          - ruby
            - require 'date'
            - Date.parse("2001-01-05")
            - Date.parse("2016-02-25 20:01:34")
            - date - 7 # seven days before
          - python
            - datetime.datetime.now(datetime.timezone.utc).date()
            - datetime.datetime.fromisoformat("2001-01-05")
            - datetime.datetime.strptime("2016-02-25 20:01:34", "%Y-%m-%d %H:%M:%S")
            - date - datetime.timedelta(days=7)
    [x] schedule for weekends
[ ] article text
    [ ] construct full script
    [ ] enforce character limit
[ ] strip parenthesized expressions, as in old version
[ ] ordering of article contents
[ ] choose voice/random voice from list
    [ ] tweak speed and pitch
[ ] better error handling
[ ] podcast on youtube
    [ ] channel
    [ ] sprout settings

